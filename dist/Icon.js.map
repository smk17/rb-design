{"version":3,"sources":["Icon.js"],"names":["React","_interopRequireWildcard","require","_classnames","_interopRequireDefault","_a","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","svgBaseProps","width","height","fill","focusable","Set","Icon","props","_b","innerNode","className","type","Component","viewBox","spin","children","restProps","classString","default","Boolean","svgClassString","innerSvgProps","customCache","createElement","component","options","scriptUrl","extraCommonProps","document","has","script","setAttribute","add","Iconfont","content","xlinkHref","displayName","createFromIconfontCN"],"mappings":"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","file":"Icon.js","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nvar _a;\nimport * as React from \"react\";\nimport classNames from \"classnames\";\nexport var svgBaseProps = (_a = {\n        width: \"1em\",\n        height: \"1em\",\n        fill: \"currentColor\"\n    },\n    _a[\"aria-hidden\"] = \"true\",\n    _a.focusable = \"false\",\n    _a);\nvar customCache = new Set();\nvar Icon = function (props) {\n    var _a, _b;\n    var \n    // affect outter <i>...</i>\n    className = props.className, \n    // affect inner <svg>...</svg>\n    type = props.type, Component = props.component, viewBox = props.viewBox, spin = props.spin, \n    // children\n    children = props.children, restProps = __rest(props, [\"className\", \"type\", \"component\", \"viewBox\", \"spin\", \"children\"]);\n    var classString = classNames((_a = {},\n        _a[\"anticon\"] = true,\n        _a[\"anticon-\" + type] = Boolean(type),\n        _a), className);\n    var svgClassString = classNames((_b = {},\n        _b[\"anticon-spin\"] = !!spin || type === \"loading\",\n        _b));\n    var innerNode;\n    // component > children > type\n    if (Component) {\n        var innerSvgProps = __assign({}, svgBaseProps, { className: svgClassString, viewBox: viewBox });\n        if (!viewBox) {\n            delete innerSvgProps.viewBox;\n        }\n        innerNode = React.createElement(Component, __assign({}, innerSvgProps), children);\n    }\n    if (children) {\n        var innerSvgProps = __assign({}, svgBaseProps, { className: svgClassString });\n        innerNode = (React.createElement(\"svg\", __assign({}, innerSvgProps, { viewBox: viewBox }), children));\n    }\n    return (React.createElement(\"i\", __assign({}, restProps, { className: classString }), innerNode));\n};\nfunction createFromIconfontCN(options) {\n    if (options === void 0) { options = {}; }\n    var scriptUrl = options.scriptUrl, _a = options.extraCommonProps, extraCommonProps = _a === void 0 ? {} : _a;\n    /**\n     * DOM API required.\n     * Make sure in browser environment.\n     * The Custom Icon will create a <script/>\n     * that loads SVG symbols and insert the SVG Element into the document body.\n     */\n    if (typeof document !== \"undefined\" &&\n        typeof window !== \"undefined\" &&\n        typeof document.createElement === \"function\" &&\n        typeof scriptUrl === \"string\" &&\n        scriptUrl.length &&\n        !customCache.has(scriptUrl)) {\n        var script = document.createElement(\"script\");\n        script.setAttribute(\"src\", scriptUrl);\n        script.setAttribute(\"data-namespace\", scriptUrl);\n        customCache.add(scriptUrl);\n        document.body.appendChild(script);\n    }\n    var Iconfont = function (props) {\n        var type = props.type, children = props.children, restProps = __rest(props, [\"type\", \"children\"]);\n        // component > children > type\n        var content = null;\n        if (props.type) {\n            content = React.createElement(\"use\", { xlinkHref: \"#\" + type });\n        }\n        if (children) {\n            content = children;\n        }\n        return (React.createElement(Icon, __assign({}, restProps, extraCommonProps), content));\n    };\n    Iconfont.displayName = \"Iconfont\";\n    return Iconfont;\n}\nexport default createFromIconfontCN;\n"]}